- name: Create common dirs
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "output/{{ clusterName }}"
    - "output/{{ clusterName }}/feature/odf"
    - "output/{{ clusterName }}/feature/odf/externalsecrets"
    - "output/{{ clusterName }}/feature/odf/storageclasses"
    - "output/{{ clusterName }}/feature/odf/redhatcop.redhat.io"
    - "output/{{ clusterName }}/externalsecrets"
    - "output/{{ clusterName }}/nodenetworkconfigurationpolicies"

#Create dirs only found in external cluster
- name: Create external cluster dirs
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "output/{{ clusterName }}/certificates"
    - "output/{{ clusterName }}/issuers"
    - "output/{{ clusterName }}/issuers/openshift-config"
    - "output/{{ clusterName }}/issuers/openshift-ingress"
    - "output/{{ clusterName }}/secretstores"
    - "output/{{ clusterName }}/secretstores/acct-mgt"
    - "output/{{ clusterName }}/secretstores/group-sync-operator"
    - "output/{{ clusterName }}/secretstores/openshift-config"
    - "output/{{ clusterName }}/secretstores/openshift-ingress"
    - "output/{{ clusterName }}/secretstores/openshift-logging"
  when: clusterType == "external"

#Create dirs only found in internal clusters
- name: Create internal cluster dirs
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "output/{{ clusterName }}/clustersecretstores"
  when: clusterType == "internal"

#Overlay Kustomization.yaml file
- template:
    src: "clustertype/{{ clusterType }}.j2"
    dest: "output/{{ clusterName }}/kustomization.yaml"

#Certificates directory
- template:
    src: "certificates/default-api-certificate.j2"
    dest: "output/{{ clusterName }}/certificates/default_api_certificate.yaml"
  when: clusterType == "external"

- template:
    src: "certificates/default-ingress-certificate.j2"
    dest: "output/{{ clusterName }}/certificates/default_ingress_certificate.yaml"
  when: clusterType == "external"

- template:
    src: "certificates/certificates-kustomization.j2"
    dest: "output/{{ clusterName }}/certificates/kustomization.yaml"
  when: clusterType == "external"

#Features/odf directory
- template:
    src: "feature/odf/storageclasses/ocs-external-storagecluster-ceph-rbd_patch.j2"
    dest: "output/{{ clusterName }}/feature/odf/storageclasses/ocs-external-storagecluster-ceph-rbd_patch.yaml"

- template:
    src: "feature/odf/redhatcop.redhat.io/odf-node-patcher.j2"
    dest: "output/{{ clusterName }}/feature/odf/redhatcop.redhat.io/odf-node-patcher.yaml"

- template:
    src: "feature/odf/externalsecrets/rook-ceph-external-cluster-details.j2"
    dest: "output/{{ clusterName }}/feature/odf/externalsecrets/rook-ceph-external-cluster-details.yaml"

- template:
    src: "feature/odf/odf-kustomization.j2"
    dest: "output/{{ clusterName }}/feature/odf/kustomization.yaml"

#External Secrets directory
- template:
    src: "externalsecrets/externalsecret-github-group-sync.j2"
    dest: "output/{{ clusterName }}/externalsecrets/github-group-sync.yaml"

- template:
    src: "externalsecrets/externalsecrets-kustomization.j2"
    dest: "output/{{ clusterName }}/externalsecrets/kustomization.yaml"

- template:
    src: "externalsecrets/externalsecret-default-api-certificate.j2"
    dest: "output/{{ clusterName }}/externalsecrets/default-api-certificate.yaml"
  when: clusterType == "internal"

- template:
    src: "externalsecrets/externalsecret-default-ingress-certificate.j2"
    dest: "output/{{ clusterName }}/externalsecrets/default-ingress-certificate.yaml"
  when: clusterType == "internal"

- template:
    src: "externalsecrets/externalsecret-github-client-secret.j2"
    dest: "output/{{ clusterName }}/externalsecrets/github-client-secret.yaml"
  when: clusterType == "internal"

- template:
    src: "externalsecrets/externalsecret-github-group-sync_patch.j2"
    dest: "output/{{ clusterName }}/externalsecrets/github-group-sync_patch.yaml"
  when: clusterType == "internal"

#Issuers directory
- template:
    src: "issuers/issuer-openshift-config.j2"
    dest: "output/{{ clusterName }}/issuers/openshift-config/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "issuers/issuer-openshift-ingress.j2"
    dest: "output/{{ clusterName }}/issuers/openshift-ingress/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "issuers/issuers-kustomization.j2"
    dest: "output/{{ clusterName }}/issuers/kustomization.yaml"
  when: clusterType == "external"

#nodenetworkconfigurationpolicies dir
- template:
    src: "nodenetworkconfigurationpolicies/vlan-nese.j2"
    dest: "output/{{ clusterName }}/nodenetworkconfigurationpolicies/vlan-{{ vlanID }}-nese.yaml"

- template:
    src: "nodenetworkconfigurationpolicies/vlan-nese-kustomization.j2"
    dest: "output/{{ clusterName }}/nodenetworkconfigurationpolicies/kustomization.yaml"

#clusterversion
- template:
    src: "clusterversion.j2"
    dest: "output/{{ clusterName }}/clusterversion.yaml"

#secretstores dir
- template:
    src: "secretstores/secretstore-acct-mgt.j2"
    dest: "output/{{ clusterName }}/secretstores/acct-mgt/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "secretstores/secretstore-group-sync-operator.j2"
    dest: "output/{{ clusterName }}/secretstores/group-sync-operator/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "secretstores/secretstore-openshift-config.j2"
    dest: "output/{{ clusterName }}/secretstores/openshift-config/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "secretstores/secretstore-openshift-ingress.j2"
    dest: "output/{{ clusterName }}/secretstores/openshift-ingress/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "secretstores/secretstore-openshift-logging.j2"
    dest: "output/{{ clusterName }}/secretstores/openshift-logging/kustomization.yaml"
  when: clusterType == "external"

- template:
    src: "secretstores/secretstore-kustomization.j2"
    dest: "output/{{ clusterName }}/secretstores/kustomization.yaml"
  when: clusterType == "external"

#clustersecretstores dir
- template:
    src: "clustersecretstores/clustersecretstore.j2"
    dest: "output/{{ clusterName }}/clustersecretstores/nerc-cluster-secrets_patch.yaml"
  when: clusterType == "internal"